import { describe, it, expect } from "vitest";

import { formatKey } from "../../../src/utilities";

describe("the formatKey function works correctly", () => {
  it("given a key with newline escape characters, it converts this to a multiline string", async () => {
    const input =
      "-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\nmQINBGLkKPIBEAC6MR6bJheHuTrt+JK5K41cHWanxzip8bszZ7tjxFFy9MW2/zCj\\nukGXKRW8bcjT+H4FhAqo4PjMhcuUxQ7uJi5GvpnV/IRm4MdWd0MQw0MycPAai5QB\\nQabKTwz1reTAIdk1Djlk253dERytstc8Cw07OUg4mvy3mf7fV5jyQeAkBB4/ykmc\\nl6h8mnOT5PiWudXsuZKAqnHlpzzqcoq5pH+j/tqM1IJhLt0d4OYJnS6C8trxpoF/\\n1Uc1E/HPhZDnH9FywbG3OImLoulTdcW44fo/RKo4XQiilnn56JkIQYoJ0UrzAUsx\\nUEbnXlAVsntAb1CZAWE4PZ8gLgMyEdX4CMTFN/LDWjrUsMgqrfgYEYEcoqrkXO1+\\n/qFg9tFWmTiMQz9DQH+c0gZhZtPldvL2U7khVxl+K8M8UpzDtdW6SbM/Agn9M8in\\nFQfXYEGF1ps6WDnd9Ojs4HNHQwnIijjL/blsKPCwLIfaLHW8Ifb9kHcDgWysognO\\nQ4qHTv+sFFRk437r+kOmDRv2j8eX9icMLBBC8zl0jD09BFMBCuoILq4XDF9qXlzs\\ndqyzl2nxRZB/sxFCmh381aDBnRne61FNVzP3QHVI7qzwyEC3/almxi314uW70ZxY\\nm+drAtRaDvH2JI2uJLtxHSStSmlStWCYrIxp3J+JUdMNgo5DC9FpM+cNgwARAQAB\\ntD5QR1AgVEVTVCBVU0VSICh1c2VyIGtleSBmb3IgdGVzdGluZyBvbiBwcmV0dHkg\\nZ29vZCBwbGF5Z3JvdW5kKYkCTgQTAQoAOBYhBJ+uzR3G1FElwK6b+OWrplJxJcQr\\nBQJi5CjyAhsDBQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAAAoJEOWrplJxJcQroyIP\\n/1lP3G6fNpkhg02kNisvkvwboA+1kVo/wwObaVBLL7iiUv0bvkn8/utnKy4zyLOP\\nR5rnizJnOy7N9z8+7qSfSnbrQ3TrxOMAf3YszFPpg99mjz6uirOICD8rnZsJ34Qj\\nCPY1LWXOgFwSwA9beGuPbnZbf+pXWnJpRYx0ITckaNkrdAEBQiKAGuTI8CdIPWcN\\nr3R03GMboRxaG0GdyPQw/LMzXcQg/KlZ0pFxwhmO8nVyceSNeg2bmooaxtyNjC+u\\n3q1gul66WwhhmNEEpPXR1h7n5UODFpomjp8xaGu9IRcMA6qkuLZsT5A5sNOO4zO9\\nbQ8JlO8vRkgwEzWY1Trokuv6u9rjxF4cI4V92Ti40AfInNtdLwqXywrbIW5nQCJy\\nHgX5FfSSbXXUVPDQ8PeNolHfjl0sXs30tgLQjQ6NT5cS+DQHMkA1bYUGiQ4+IEhA\\nv1fARR9iwRTxnuSPvSuxQIDIt3lCsT5UBO9hB4sFW5dqu+VayRv3V7xakhC27En8\\nOsGU/x61xeONxqXOq94//GQaGDQ451H7Y6FEA/A7qPAEgsmTyiFF/IyE2HEZ/nXi\\nciaRY0e5GdH6Ut4ikOPOsktKMKZzDGsALMuVsWLXoiAkRssZwS1yFsG/mdFY4ItY\\n10KrbuollHQ8H/Dow0DPjPhYb8YTgMKrfUALUBoSxeukuQINBGLkKPIBEADHxEWB\\njEqKZdgRFH5I7LD2+mlSoY50ZS58e2PZpCNR3//wWIKbVckS4KEMjIsnmKvazx22\\naQGiSpNNHfs6cxUVH2stdYXfZy3o/3nxhx+V9uTGrht6bQFl6gNjK1czPR+OXqS5\\nYqgTY+A7/PLfASAuiEaOl4IktsGRLXuuITe9+CFxKApv0jc8nXBqi0pBXDo3372I\\nM47BqIzQCPH++b7vwnR2ZA+qUgrfgTGHVnq308TZ9YzU8c5Orzd1oqv3jmh4p5B6\\n0/B1CAscWvK0JJLq7U1Exdmy0NEcb5uN+gwN5FsERSglEwCp0y3xO8bLAQWO7Lcw\\nrlH1kW1cxhHUIWu2LdJ1w5R0ZLcG3OM9fs8kRgQr8Szptees8+XZvfaZGQb/ouR1\\nzh8P6ba0arA1gEfTOrQkWEvzTaipY8oeXRiUDUzBRBFflBV28rF0oBWuzdH/1WMq\\nIzcFOSQi4f5Ua8+wtlk1EbB2gsD1rBw0dQnzwcAmwTgmxpVKns0GOgybuFNNAfeN\\nJwlSWj+dWMK/q2Zv7M7MjYOG97ijAOY1SJtLUIyFKp6n5YV+6uqip/bd3PTLUy/I\\nf1gjeTXi0VLtyx8IUw9bJ84M1mmxIT8PcrqglVqrQgp3Q4u983WXg5FDvBNEYdM+\\njqggR+ZZKebtKG8TB26G0Lgr7bJIOsG3i2JeOwARAQABiQI2BBgBCgAgFiEEn67N\\nHcbUUSXArpv45aumUnElxCsFAmLkKPICGwwACgkQ5aumUnElxCsREw//RpY3V6u0\\niLWeRoei7lIMdyiOw74b+lBQv35Nyj8VX/2vZQ4l8us6RH/OxJlKbXokyrumGMo6\\n1pbNnIl+ainF+9JFJYizJiuq2J+I17uLi4OA5UthjhDVBdXDcjYY+zNA6Jt7U1aL\\nukfm7pAtCGge8Ot0fmb7EFusJYj5P0pmICkvF2a8zi7JhoF1hDbPr985/3nePgdY\\n5PueSGRisbv2TyRzNyRMBvE0vGCleE0wyhjNQiINOKs5ZVw02s/UPVS8drqXBu2U\\nuUK0prsfeA7fOz/atPq4MnltiAuaPu7qwsnJlIl+lWKcxaE5zck+XwKgiYK5iUoS\\nH4Bp+b1WIR29/CSnQyhuc7UHqRz3FI7XIrZzh7a4QKF5gwOFGMVlRGH89E279l1D\\neREDi+LJqP3ujE2Yc1CJi2KaPVoN7CiQijnLnPGyOWvzZZ+CiFTj9qAB38TlI36K\\nAVPEXVyoPBcxjPzPpdyQIRS19H3zBMz9572D4NC6cipOpI3DZAORpgRp6MQp28P9\\ns4uAkaDUwtG52e6K3+mL+wxnplbWcwgsca6K3DBW8Ga3by8nmdfjsUisS8Ul780t\\n8Vrg1LNom7vTW8GP5pc18bZpOpLuFhByesN09QZTrpjrAPDHHewXJisG6+YsYoC8\\n81wKVRnWj9o+qSvsbQv09r5zGiertreTgeg=\\n=wPIl\\n-----END PGP PUBLIC KEY BLOCK-----";
    const expectedResult = `-----BEGIN PGP PUBLIC KEY BLOCK-----

mQINBGLkKPIBEAC6MR6bJheHuTrt+JK5K41cHWanxzip8bszZ7tjxFFy9MW2/zCj
ukGXKRW8bcjT+H4FhAqo4PjMhcuUxQ7uJi5GvpnV/IRm4MdWd0MQw0MycPAai5QB
QabKTwz1reTAIdk1Djlk253dERytstc8Cw07OUg4mvy3mf7fV5jyQeAkBB4/ykmc
l6h8mnOT5PiWudXsuZKAqnHlpzzqcoq5pH+j/tqM1IJhLt0d4OYJnS6C8trxpoF/
1Uc1E/HPhZDnH9FywbG3OImLoulTdcW44fo/RKo4XQiilnn56JkIQYoJ0UrzAUsx
UEbnXlAVsntAb1CZAWE4PZ8gLgMyEdX4CMTFN/LDWjrUsMgqrfgYEYEcoqrkXO1+
/qFg9tFWmTiMQz9DQH+c0gZhZtPldvL2U7khVxl+K8M8UpzDtdW6SbM/Agn9M8in
FQfXYEGF1ps6WDnd9Ojs4HNHQwnIijjL/blsKPCwLIfaLHW8Ifb9kHcDgWysognO
Q4qHTv+sFFRk437r+kOmDRv2j8eX9icMLBBC8zl0jD09BFMBCuoILq4XDF9qXlzs
dqyzl2nxRZB/sxFCmh381aDBnRne61FNVzP3QHVI7qzwyEC3/almxi314uW70ZxY
m+drAtRaDvH2JI2uJLtxHSStSmlStWCYrIxp3J+JUdMNgo5DC9FpM+cNgwARAQAB
tD5QR1AgVEVTVCBVU0VSICh1c2VyIGtleSBmb3IgdGVzdGluZyBvbiBwcmV0dHkg
Z29vZCBwbGF5Z3JvdW5kKYkCTgQTAQoAOBYhBJ+uzR3G1FElwK6b+OWrplJxJcQr
BQJi5CjyAhsDBQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAAAoJEOWrplJxJcQroyIP
/1lP3G6fNpkhg02kNisvkvwboA+1kVo/wwObaVBLL7iiUv0bvkn8/utnKy4zyLOP
R5rnizJnOy7N9z8+7qSfSnbrQ3TrxOMAf3YszFPpg99mjz6uirOICD8rnZsJ34Qj
CPY1LWXOgFwSwA9beGuPbnZbf+pXWnJpRYx0ITckaNkrdAEBQiKAGuTI8CdIPWcN
r3R03GMboRxaG0GdyPQw/LMzXcQg/KlZ0pFxwhmO8nVyceSNeg2bmooaxtyNjC+u
3q1gul66WwhhmNEEpPXR1h7n5UODFpomjp8xaGu9IRcMA6qkuLZsT5A5sNOO4zO9
bQ8JlO8vRkgwEzWY1Trokuv6u9rjxF4cI4V92Ti40AfInNtdLwqXywrbIW5nQCJy
HgX5FfSSbXXUVPDQ8PeNolHfjl0sXs30tgLQjQ6NT5cS+DQHMkA1bYUGiQ4+IEhA
v1fARR9iwRTxnuSPvSuxQIDIt3lCsT5UBO9hB4sFW5dqu+VayRv3V7xakhC27En8
OsGU/x61xeONxqXOq94//GQaGDQ451H7Y6FEA/A7qPAEgsmTyiFF/IyE2HEZ/nXi
ciaRY0e5GdH6Ut4ikOPOsktKMKZzDGsALMuVsWLXoiAkRssZwS1yFsG/mdFY4ItY
10KrbuollHQ8H/Dow0DPjPhYb8YTgMKrfUALUBoSxeukuQINBGLkKPIBEADHxEWB
jEqKZdgRFH5I7LD2+mlSoY50ZS58e2PZpCNR3//wWIKbVckS4KEMjIsnmKvazx22
aQGiSpNNHfs6cxUVH2stdYXfZy3o/3nxhx+V9uTGrht6bQFl6gNjK1czPR+OXqS5
YqgTY+A7/PLfASAuiEaOl4IktsGRLXuuITe9+CFxKApv0jc8nXBqi0pBXDo3372I
M47BqIzQCPH++b7vwnR2ZA+qUgrfgTGHVnq308TZ9YzU8c5Orzd1oqv3jmh4p5B6
0/B1CAscWvK0JJLq7U1Exdmy0NEcb5uN+gwN5FsERSglEwCp0y3xO8bLAQWO7Lcw
rlH1kW1cxhHUIWu2LdJ1w5R0ZLcG3OM9fs8kRgQr8Szptees8+XZvfaZGQb/ouR1
zh8P6ba0arA1gEfTOrQkWEvzTaipY8oeXRiUDUzBRBFflBV28rF0oBWuzdH/1WMq
IzcFOSQi4f5Ua8+wtlk1EbB2gsD1rBw0dQnzwcAmwTgmxpVKns0GOgybuFNNAfeN
JwlSWj+dWMK/q2Zv7M7MjYOG97ijAOY1SJtLUIyFKp6n5YV+6uqip/bd3PTLUy/I
f1gjeTXi0VLtyx8IUw9bJ84M1mmxIT8PcrqglVqrQgp3Q4u983WXg5FDvBNEYdM+
jqggR+ZZKebtKG8TB26G0Lgr7bJIOsG3i2JeOwARAQABiQI2BBgBCgAgFiEEn67N
HcbUUSXArpv45aumUnElxCsFAmLkKPICGwwACgkQ5aumUnElxCsREw//RpY3V6u0
iLWeRoei7lIMdyiOw74b+lBQv35Nyj8VX/2vZQ4l8us6RH/OxJlKbXokyrumGMo6
1pbNnIl+ainF+9JFJYizJiuq2J+I17uLi4OA5UthjhDVBdXDcjYY+zNA6Jt7U1aL
ukfm7pAtCGge8Ot0fmb7EFusJYj5P0pmICkvF2a8zi7JhoF1hDbPr985/3nePgdY
5PueSGRisbv2TyRzNyRMBvE0vGCleE0wyhjNQiINOKs5ZVw02s/UPVS8drqXBu2U
uUK0prsfeA7fOz/atPq4MnltiAuaPu7qwsnJlIl+lWKcxaE5zck+XwKgiYK5iUoS
H4Bp+b1WIR29/CSnQyhuc7UHqRz3FI7XIrZzh7a4QKF5gwOFGMVlRGH89E279l1D
eREDi+LJqP3ujE2Yc1CJi2KaPVoN7CiQijnLnPGyOWvzZZ+CiFTj9qAB38TlI36K
AVPEXVyoPBcxjPzPpdyQIRS19H3zBMz9572D4NC6cipOpI3DZAORpgRp6MQp28P9
s4uAkaDUwtG52e6K3+mL+wxnplbWcwgsca6K3DBW8Ga3by8nmdfjsUisS8Ul780t
8Vrg1LNom7vTW8GP5pc18bZpOpLuFhByesN09QZTrpjrAPDHHewXJisG6+YsYoC8
81wKVRnWj9o+qSvsbQv09r5zGiertreTgeg=
=wPIl
-----END PGP PUBLIC KEY BLOCK-----`;

    const result = formatKey(input);

    expect(result.includes("\\n")).toBeFalsy();

    expect(result.replace(/\s+/g, "")).toEqual(expectedResult.replace(/\s+/g, ""));
  });
});
